<?php

/**
 * Implementation of hook_menu
 *
 * @return list of links
 */
function os2dagsorden_content_modify_menu() {
  $items = array();

  $items['admin/config/os2dagsorden/create_committee'] = array(
    'title' => 'Committees',
    'description' => 'Module that supports manual creation or editing of the committee',
    'page callback' => '_os2dagsorden_content_modify_committee',
    'access arguments' => array('administer os2web'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/os2dagsorden/create_user_position'] = array(
    'title' => 'User positions',
    'description' => 'Module that supports manual creation or editing of the user position',
    'page callback' => '_os2dagsorden_content_modify_user_position',
    'access arguments' => array('administer os2web'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/os2dagsorden/attach_user_position'] = array(
    'title' => 'Assign user positions to users',
    'description' => 'Module that supports assigning/removing roles from the users',
    'page callback' => '_os2dagsorden_content_modify_users',
    'access arguments' => array('administer users'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['user/%/simple_edit'] = array(
    'title' => 'User edit simple',
    'page callback' => '_os2dagsorden_content_modify_user_edit_page',
    'page arguments' => array(1),
    'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_TASK,
  );

  $items['user/simple_edit'] = array(
    'title' => 'Kontoindstillinger',
    'page callback' => '_os2dagsorden_content_modify_user_edit_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'menu-sidepane-menu',
    'options' => array(
      'attributes' => array('id' => 'menu-simple-user-edit'),
    ),
  );

  $items['users-batch-simple-edit/%'] = array(
    'title' => 'Kontoindstillinger',
    'page callback' => '_os2dagsorden_content_modify_user_batch_edit_page',
    'page arguments' => array(1),
    'access arguments' => array('administer users'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'menu-sidepane-menu',
    'options' => array(
      'attributes' => array('id' => 'menu-simple-user-edit'),
    ),
  );

  return $items;
}

/**
 * Helper function, redirects to taxonomy creation page.
 *
 * @return none
 */
function _os2dagsorden_content_modify_committee(){
    drupal_goto('admin/structure/taxonomy/os2web_meetings_tax_committee');
}

/**
 * Helper function, redirects to taxonomy user position creation page.
 *
 * @return none
 */
function _os2dagsorden_content_modify_user_position(){
    drupal_goto('admin/structure/taxonomy/user_position');
}

/**
 * Helper function, redirects to taxonomy users edit page.
 *
 * @return none
 */
function _os2dagsorden_content_modify_users(){
    drupal_goto('admin/people');
}

/**
 * Hook to user operations.
 * Adds custom user edit page.
 *
 * @return none
 */
function os2dagsorden_content_modify_user_operations() {
  $operations = array(
    'Add position' => array(
      'label' => t('Add the position to selected user'),
      'callback' => '_os2dagsorden_content_modify_user_edit_redirect',
    ),
  );
  return $operations;
}

/**
 * Redirect for the user edit link from user operation menu.
 * Redirects to simple edit link.
 *
 * @param $accounts array array of the user ids.
 *
 * @return none
 */
function _os2dagsorden_content_modify_user_edit_redirect($accounts){
  $account = array_pop($accounts);
  drupal_goto('user/' . $account . '/simple_edit');
}

/**
 * Calls form for user simple edit.
 * If user has no administer os2web rights, he will be allowed only to edit his own profile.
 *
 * @param $uid int id of the user to modify.
 *
 * @return form
 */
function _os2dagsorden_content_modify_user_edit_page($uid = null){
  $full_user = os2dagsorden_access_helper_get_user();

  if (empty($uid)){
      $uid = $full_user->uid;
  }

  if (!user_access('administer users', $full_user)){
    if ($full_user->uid != $uid){
      drupal_goto('user/simple_edit');
    }
  }
  return drupal_get_form('os2dagsorden_content_modify_user_edit_form', $uid);
}

/**
 * Callback for users batch edit page.
 *
 *
 * @param $uids CSV of the user ID's (uid) that will be affected by this batch process
 *
 * @return form
 */
function _os2dagsorden_content_modify_user_batch_edit_page($uids){
  return drupal_get_form('os2dagsorden_content_modify_user_batch_edit_form', $uids);
}

function os2dagsorden_content_modify_user_batch_edit_form($form, $form_state, $uids) {
  $form['uids'] = array(
    '#type' => 'value',
    '#value' => $uids,
  );

  $form[] = array(
    '#markup' => '<div class="node clearfix">',
  );

  $form[] = array(
    '#markup' => '<div class="form-item"><b>' . t('Batch editing users') . '</b>',
  );
  foreach (explode(',', $uids) as $uid) {
    $batchEditUser = user_load($uid);
    if ($batchEditUser) {
      $form[] = array(
        '#markup' => '<li>' . $batchEditUser->name,
      );
    }
  }
  $form[] = array(
    '#markup' => '</div>',
  );

  if (!os2dagsorden_access_helper_is_touch()){ //TODO: change!
    //render drag and drop functionality
    _os2dagsorden_content_modify_render_drag_and_drop_controls($form, explode(',', $uids));
  } else {
    //fallback to default controls
    _os2dagsorden_content_modify_render_default_controls($form, explode(',', $uids));
  }

  $form[] = array(
    '#markup' => '<div><i>' . t('Note that you can only ADD the new committees, the exisiting committees will no be removed'). '</i></div>',
  );

  $form['save_user'] = array(
    '#type' => 'submit',
    '#attributes' => array(
      'class' => array('form-save-submit'),
    ),
    '#value' => t('Save User'),
    '#submit' => array('os2dagsorden_content_modify_user_batch_submit'),
  );

  $form[] = array(
    '#markup' => '</div>',
  );

  return $form;
}

/**
 * Generates user edit form and (if uid is not null) loads and sets the parameters.
 * Depending on the user rights form is either limited (with no right) of full (with administer os2web right).
 *
 * @param $form       mixed the form
 * @param $form_state mixed the state of the form
 * @param $uid        int   the id of the user to be modified
 *
 * @return form
 */
function os2dagsorden_content_modify_user_edit_form($form, $form_state, $uid){
   
  $form[] = array(
    '#markup' => '<div class="node clearfix">',
  );

  $form['full_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Full name:'),
    '#size' => 60,
    '#maxlength' => 128,
    '#description' => t('Is displayed in the top right corner.'),
  );
  
    $form['organization'] = array(
    '#type' => 'textfield',
    '#title' => t('Organization:'),
    '#size' => 60,
    '#maxlength' => 128,
    
  );

  $form['calendar_pref'] = array(
    //'#access' => user_access('administer os2web', $full_user),
    '#type' => 'checkboxes',
    '#options' => array(
      'pol' => t('Political'),
      'org' => t('Organizational')
    ),
    '#title' =>"<b>" . t('Calendar preferences:') . "</b>",
    '#description' => t('Which types of meetings should user see in the calendar'),
  );

  $form['forbidden_cat'] = array(
    '#access' => user_access('administer users'),
    '#type' => 'checkboxes',
    '#options' => array(
      'pol' => t('Political'),
      'org' => t('Organizational')
    ),
    '#title' =>"<b>" . t('Forbidden categories:') . "</b>",
    '#description' => t('Which categories the user is FORBIDDEN to have access to'),
  );
  
  $form['user_can_send_closed_bp'] = array(
    '#access' => user_access('administer users'), 
    '#type' => 'radios',    
    '#title' => "<b>" .t('User can send to friend closed bullet points') . "</b>" ,
    '#default_value' => false,
    '#options' => array(
      true => t('Yes'),
      false => t('No')
    ),
  );

  $form['user_roles'] = array(
    '#access' => (user_access('administer users', $full_user)),
    '#type' => 'checkboxes',
    '#options' => array(
      'os2dagsorden limited' => t('OS2Dagsorden limited') .'<i>' . t(' (Kan kun tilgå udvalg man er medlem af)') .'</i>',
      'administrator+' => t('Administrator+')  . '<i>' . t(' (adgang til redigering af udvalg og brugere)').'</i>',  
      'administrator++' => t('Administrator++') . '<i>' . t(' (rettigheder til al konfiguration og alle settings)').'</i>',      
    ),
    '#title' => '<b>' . t('Brugerroller') . '</b>',
    '#description' => t('Hvilke roller tilsættes til brugeren'),
  );
  
  if (!user_access('administer os2web', $full_user)) 
      $form['user_roles']['administrator++']['#disabled']  = TRUE;

  if (!os2dagsorden_access_helper_is_touch()){
    //render drag and drop functionality
    _os2dagsorden_content_modify_render_drag_and_drop_controls($form, array($uid));
  } else {
    //fallback to default controls
    _os2dagsorden_content_modify_render_default_controls($form, array($uid));
  }

  //loading common user fields
  if ($uid) {
    _os2dagsorden_conten_modify_load_user_fields($form, $uid);
  }
 
  $form['save_user'] = array(
    '#type' => 'submit',
    '#attributes' => array(
      'class' => array('form-save-submit'),
    ),
    '#value' => t('Save User'),
    '#submit' => array('os2dagsorden_content_modify_user_submit'),
  );
  $form[] = array(
      '#markup' => '</div>',//<div class="node clearfix">
  );

  return $form;
}

function _os2dagsorden_content_modify_render_drag_and_drop_controls(&$form, $uids){
  $form[] = array(
    '#markup' => '<div class="form-item"><b>' . t('Træk udvalg fra kassen under Mulige udvalg til Følger-kassen.') . '</b></div>',
  );

  $form[] = array(
    '#markup' => '<div class="select-committee">',
  );
 
  $form['member_of_div'] = array(
    '#access' => user_access('administer users'),  
    '#type' => 'item' ,
    '#prefix' => '<label>' . t('Member of:') . '</label>',       
    '#markup' => '',
  ); 
  $form['member_of_hidden'] = array(
    '#type' => 'hidden',       
    '#attributes' => array(   
      'id' => 'member_of_hidden',
    )
  );
  $form['follows_div'] = array(
    '#type' => 'item' ,
    '#prefix' => '<label>' . t('Follows:') . '</label>',       
    '#markup' => '',
  );

  $form['follows_hidden'] = array(
    '#type' => 'hidden',       
    '#attributes' => array(   
      'id' => 'follows_hidden',
    )
  );
  $form['follows_plus_div'] = array(
    '#access' => user_access('administer users'),  
    '#type' => 'item' ,
    '#prefix' => '<label>' . t('Follows+:') . '</label>',       
    '#markup' => '',
     
  ); 
  $form['follows_plus_hidden'] = array(
    '#type' => 'hidden',       
    '#attributes' => array(   
      'id' => 'follows_plus_hidden',
    )
  );

  $form['follows_plus_plus_div'] = array(
    '#access' => user_access('administer users'),  
    '#type' => 'item' ,
    '#prefix' => '<label>' . t('Follows++:') . '</label>',       
    '#markup' => '',
     
  ); 
  $form['follows_plus_plus_hidden'] = array(
    '#type' => 'hidden',       
    '#attributes' => array(   
      'id' => 'follows_plus_plus_hidden',
    )
  );
  $form[] = array(
   '#markup' => '</div >',//<div class="select-committee">
  );

  $shared_all_user_committee = array();

  if ($uids){
    $com_terms = os2dagsorden_settings_get_active_committees();
    $com_select = array();
    foreach ($com_terms as $com_term) {
      $com_select[$com_term->tid] = $com_term->name;
    }

    $shared_member_of = array();
    $shared_follows = array();
    $shared_follows_plus = array();
    $shared_follows_plus_plus = array();
    foreach ($uids as $uid) {
      $user = user_load($uid);

      //member of
      if (field_get_items('user', $user, 'field_user_committee')) {
        $user_member_of_field = field_get_items('user', $user, 'field_user_committee');
        foreach ($user_member_of_field as $member_of) {
          if (isset($com_select[$member_of['tid']])) {
            $shared_member_of[$member_of['tid']]++;
            $shared_all_user_committee[$member_of['tid']]++;
          }
        }
      }

      //follows
      if (field_get_items('user', $user, 'field_follows_committee')) {
        $user_follows_field = field_get_items('user', $user, 'field_follows_committee');
        foreach ($user_follows_field as $follows) {
          if (isset($com_select[$follows['tid']])) {
            $shared_follows[$follows['tid']]++;
            $shared_all_user_committee[$follows['tid']]++;
          }
        }
      }

      //follows plus
      if (field_get_items('user', $user, 'field_follows_committee_plus')) {
        $user_follows_plus_field = field_get_items('user', $user, 'field_follows_committee_plus');
        foreach ($user_follows_plus_field as $follows_plus) {
          if (isset($com_select[$follows_plus['tid']])) {
            $shared_follows_plus[$follows_plus['tid']]++;
            $shared_all_user_committee[$follows_plus['tid']]++;
          }
        }
      }

      //follows plus plus
      if (field_get_items('user', $user, 'field_follows_committee_pp')) {
        $user_follows_plus_plus_field = field_get_items('user', $user, 'field_follows_committee_pp');
        foreach ($user_follows_plus_plus_field as $follows_plus_plus) {
          if (isset($com_select[$follows_plus_plus['tid']])) {
            $shared_follows_plus_plus[$follows_plus_plus['tid']]++;
            $shared_all_user_committee[$follows_plus_plus['tid']]++;
          }
        }
      }
    }

    //printing member of
    $form['member_of_hidden']['#value'] = implode(',', array_keys($shared_member_of));
    $content = "<ul id='member_of' class='droptrue'>";
    foreach ($shared_member_of as $tid => $count) {
      if ($count == count($uids)) {
        $content .= "<li id='{$tid}' class='ui-state-default'>{$com_select[$tid]}</li>";
      }
    }
    $content .= '</ul>';
    $form['member_of_div']['#markup'] = $content;

    //printing follows
    $form['follows_hidden']['#value'] = implode(',', array_keys($shared_follows));
    $content = "<ul id='follows' class='droptrue'>";
    foreach ($shared_follows as $tid => $count) {
      if ($count == count($uids)) {
        $content .= "<li id='{$tid}' class='ui-state-default'>{$com_select[$tid]}</li>";
      }
    }
    $content .= '</ul>';
    $form['follows_div']['#markup'] = $content;

    //printing follows plus
    $form['follows_plus_hidden']['#value'] = implode(',', array_keys($shared_follows_plus));
    $content = "<ul id='follows_plus' class='droptrue'>";
    foreach ($shared_follows_plus as $tid => $count) {
      if ($count == count($uids)) {
        $content .= "<li id='{$tid}' class='ui-state-default'>{$com_select[$tid]}</li>";
      }
    }
    $content .= '</ul>';
    $form['follows_plus_div']['#markup'] = $content;

    //printing follows plus plus
    $form['follows_plus_plus_hidden']['#value'] = implode(',', array_keys($shared_follows_plus_plus));
    $content = "<ul id='follows_plus_plus' class='droptrue'>";
    foreach ($shared_follows_plus_plus as $tid => $count) {
      if ($count == count($uids)) {
        $content .= "<li id='{$tid}' class='ui-state-default'>{$com_select[$tid]}</li>";
      }
    }
    $content .= '</ul>';
    $form['follows_plus_plus_div']['#markup'] = $content;

    //printing available committees
    $com_list = "<ul id='available_committee' class='droptrue'>";
    foreach ($com_select as $tid=>$com_term) {
      //if the committee actually available?
      if ($shared_all_user_committee[$tid] < count($uids)) {
        $com_list  .= "<li id='{$tid}' class='ui-state-default'>{$com_term}</li>";
      }
    }
    $com_list .= "</ul>";
    $form['available_committee'] = array(
      '#type' => 'item' ,
      '#prefix' => "<div class='available_committee'><label>" . t('Available committee') . ":</label>",
      '#markup' => $com_list,
      '#suffix' => '</div>'
    );
    $form[] = array(
      '#markup' => "<div style='clear:both'></div>",
    );
  }
}

function _os2dagsorden_content_modify_render_default_controls(&$form, $uids){
  $com_terms = os2dagsorden_settings_get_active_committees();
  $com_select = array();

  foreach ($com_terms as $com_term) {
    $com_select[$com_term->tid] = $com_term->name;
  }

  $form['member_of'] = array(
      '#access' => user_access('administer users'),
      '#type' => 'select',
      '#title' => t('Member of:'),
      '#options' => $com_select,
      '#multiple' => TRUE,
      '#size' => 10,
  );
    

  $form['follows'] = array(
      '#type' => 'select',
      '#title' => t('Follows:'),
      '#options' => $com_select,
      '#multiple' => TRUE,
      '#size' => 10,
  );
  
  $form['follows_plus'] = array(
      '#access' => user_access('administer users'),
      '#type' => 'select',
      '#title' => t('Follows+:'),
      '#options' => $com_select,
      '#multiple' => TRUE,
      '#size' => 10,
  );
    
  $form['follows_plus_plus'] = array(
      '#access' => user_access('administer users'),
      '#type' => 'select',
      '#title' => t('Follows++:'),
      '#options' => $com_select,
      '#multiple' => TRUE,
      '#size' => 10,
  );

  if ($uids) {
    $shared_member_of = array();
    $shared_follows = array();
    $shared_follows_plus = array();
    $shared_follows_plus_plus = array();

    //gathering shared committees
    foreach ($uids as $uid) {
      $user = user_load($uid);

      //member of
      if (field_get_items('user', $user, 'field_user_committee')) {
        $user_member_of_field = field_get_items('user', $user, 'field_user_committee');
        foreach ($user_member_of_field as $member_of){
          $shared_member_of[$member_of['tid']]++;
        }
      }

      //follows
      if (field_get_items('user', $user, 'field_follows_committee')) {
        $user_follows_field = field_get_items('user', $user, 'field_follows_committee');
        foreach ($user_follows_field as $follows){
          $shared_follows[$follows['tid']]++;
        }
      }

      //follows plus
      if (field_get_items('user', $user, 'field_follows_committee_plus')) {
        $user_follows_plus_field = field_get_items('user', $user, 'field_follows_committee_plus');
        foreach ($user_follows_plus_field as $follows_plus){
          $shared_follows_plus[$follows_plus['tid']]++;
        }
      }

      //follows plus plus
      if (field_get_items('user', $user, 'field_follows_committee_pp')){
        $user_follows_plus_field = field_get_items('user', $user, 'field_follows_committee_pp');
        foreach ($user_follows_plus_field as $follows_plus){
          $shared_follows_plus_plus[$follows_plus['tid']]++;
        }
      }
    }

    //filling the default values
    $size = count($uids);
    foreach ($shared_member_of as $k => $t) {
      if ($t != $size) {
        unset($shared_member_of[$k]);
      }
    }
    foreach ($shared_follows as $k => $t) {
      if ($t != $size) {
        unset($shared_follows[$k]);
      }
    }
    foreach ($shared_follows_plus as $k => $t) {
      if ($t != $size) {
        unset($shared_follows_plus[$k]);
      }
    }
    foreach ($shared_follows_plus_plus as $k => $t) {
      if ($t != $size) {
        unset($shared_follows_plus_plus[$k]);
      }
    }
    $form['member_of']['#default_value'] = array_keys($shared_member_of);
    $form['follows']['#default_value'] = array_keys($shared_follows);
    $form['follows_plus']['#default_value'] = array_keys($shared_follows_plus);
    $form['follows_plus_plus']['#default_value'] = array_keys($shared_follows_plus_plus);
  }
}

function _os2dagsorden_conten_modify_load_user_fields(&$form, $uid){
    //saving for usage in the submit function
    $form['uid'] = array(
      '#type' => 'value',
      '#value' => $uid,
    );
    $user = user_load($uid);

    //filling the fields
    if (field_get_items('user', $user, 'field_user_full_name') ){
      $full_name_field = array_pop(field_get_items('user', $user, 'field_user_full_name'));
      $form['full_name']['#default_value'] = $full_name_field['value'];
    }
    if (field_get_items('user', $user, 'field_user_organization') ){
      $organization_field = array_pop(field_get_items('user', $user, 'field_user_organization'));
      $form['organization']['#default_value'] = $organization_field['value'];
    }


    if (field_get_items('user', $user, 'field_user_can_send_closed_bp')){
      $user_can_send_closed_bp = array_pop(field_get_items('user', $user, 'field_user_can_send_closed_bp'));
      $form['user_can_send_closed_bp']['#default_value'] = $user_can_send_closed_bp['value'];
    }
    
   if (field_get_items('user', $user, 'field_user_forrbidden_categories')) {
      $forrbidden_cats_field = field_get_items('user', $user, 'field_user_forrbidden_categories');
      $selection = array();
      
      foreach ($forrbidden_cats_field as $forrbidden_cat) {
	$selection[] = $forrbidden_cat['value'];
      };
      $form['forbidden_cat']['#default_value'] = $selection;
      $options = $form['calendar_pref']['#options'];
      foreach ($selection as $forbidden_cat){
          unset($options[$forbidden_cat]);
      }
      $form['calendar_pref']['#options'] = $options;
    }
  
    if (field_get_items('user', $user, 'field_user_meetings_category')) {
      $calendar_prefs_field = field_get_items('user', $user, 'field_user_meetings_category');
      $selection = array();
      foreach ($calendar_prefs_field as $cal_pref) {
         $selection[]=$cal_pref['value'];
    }
   
    $form['calendar_pref']['#default_value'] = $selection;
    }

    $form['user_roles']['#default_value'] = $user->roles;
}

/**
 * Submit for user edit form. Updates user profile.
 *
 * @param $form       mixed the form
 * @param $form_state mixed state of the form
 *
 * @return none
 */
function os2dagsorden_content_modify_user_submit($form, $form_state){
  $input = $form_state['input'];

  //input extraction
  extract($input);
  if (!os2dagsorden_access_helper_is_touch()){
    $follows = explode(',', $follows_hidden);
    $member_of = explode(',', $member_of_hidden);
    $follows_plus = explode(',', $follows_plus_hidden);
    $follows_plus_plus = explode(',', $follows_plus_plus_hidden);
  }

  $user = user_load($form_state['values']['uid']);
  $user->field_user_full_name['und'][0]['value'] = $full_name;
  $user->field_user_organization['und'][0]['value'] = $organization;
  $user->field_user_can_send_closed_bp['und'][0]['value'] = $user_can_send_closed_bp;
         
  //unsetting follows committees
  $user->field_follows_committee['und'] = array();
  if ($follows) {
    foreach ($follows as $tid) {
      if (!empty($tid))
        $user->field_follows_committee['und'][]['tid'] = $tid;
    }
  }

  //unsetting calendar preferences
  $user->field_user_meetings_category['und'] = array();
  if (isset($calendar_pref)) {
    foreach ($calendar_pref as $cal_pref) {
      if (isset($forbidden_cat)){
        if (!in_array($cal_pref, $forbidden_cat))
          $user->field_user_meetings_category['und'][]['value'] = $cal_pref;
        }
      else
      $user->field_user_meetings_category['und'][]['value'] = $cal_pref;
    }
  } 

  if (user_access('administer users')){//only for the full form submit
    //unsetting positions
    $user->field_user_positions['und'] = array();
    if ($user_pos) {
      foreach ($user_pos as $tid) {
	    $user->field_user_positions['und'][]['tid'] = $tid;
      }
    }
    
    //unsetting calendar preferences
    $user->field_user_forrbidden_categories['und'] = array();
    foreach ($forbidden_cat as $f_cat){
      $user->field_user_forrbidden_categories['und'][]['value'] = $f_cat;
    }
    //unsetting committees
    $user->field_user_committee['und'] = array();
    if ($member_of) {
      foreach ($member_of as $tid) {
        if (!empty($tid))      
	      $user->field_user_committee['und'][]['tid'] = $tid;
      }
    }

    //unsetting follows plus committees
    $user->field_follows_committee_plus['und'] = array();
    if ($follows_plus) {
      foreach ($follows_plus as $tid) {
        if (!empty($tid))
	      $user->field_follows_committee_plus['und'][]['tid'] = $tid;
      }
    }
    
    //unsetting follows ++ committees
    $user->field_follows_committee_pp['und'] = array();
    if ($follows_plus_plus) {
      foreach ($follows_plus_plus as $tid) {
        if (!empty($tid))      
	      $user->field_follows_committee_pp['und'][]['tid'] = $tid;
      }
    }

    //os2dagsorden limited role
    $user_roles_saved = $user->roles;
      
    //os2dagsorden admin role
    if(user_access('administer os2web')){
        if (!$user_roles['administrator++']){
          if (($key = array_search('administrator++', $user_roles_saved)) !== false) {
              unset($user_roles_saved[$key]);
          }
        } else {
          if ((array_search('administrator++', $user_roles_saved)) === false) {
              $rid = user_role_load_by_name('administrator++')->rid;
              $user_roles_saved[$rid] = 'administrator++';
          }
        }
    }
    if (!$user_roles['os2dagsorden limited']){
      if (($key = array_search('os2dagsorden limited', $user_roles_saved)) !== false) {
	  unset($user_roles_saved[$key]);
      }
    } else {
      if ((array_search('os2dagsorden limited', $user_roles_saved)) === false) {
	  $rid = user_role_load_by_name('os2dagsorden limited')->rid;
	  $user_roles_saved[$rid] = 'os2dagsorden limited';
      }
    }
    
    if (!$user_roles['administrator+']){
      if (($key = array_search('administrator+', $user_roles_saved)) !== false) {
	  unset($user_roles_saved[$key]);
      }
    } else {
      if ((array_search('administrator+', $user_roles_saved)) === false) {
	  $rid = user_role_load_by_name('administrator+')->rid;
	  $user_roles_saved[$rid] = 'administrator+';
      }
    }
    $user->roles = $user_roles_saved;
  }

  user_save($user);
  drupal_set_message(t('Dine ændringer er blevet gemt'));
}

/**
 * Submit for user bach form. Updates user profiles.
 *
 * @param $form       mixed the form
 * @param $form_state mixed state of the form
 *
 * @return none
 */
function os2dagsorden_content_modify_user_batch_submit($form, $form_state) {
  $input = $form_state['input'];

  //input extraction
  extract($input);
  if (!os2dagsorden_access_helper_is_touch()){
    $follows = explode(',', $follows_hidden);
    $member_of = explode(',', $member_of_hidden);
    $follows_plus = explode(',', $follows_plus_hidden);
    $follows_plus_plus = explode(',', $follows_plus_plus_hidden);
  }

  $uids = explode(',', $form_state['values']['uids']);
  foreach ($uids as $uid) {
    $user = user_load($uid);

    //user committees
    if ($member_of) {
      $existing_tids = os2dagsorden_access_helper_get_user_member_of_committees($uid);
      foreach ($member_of as $tid) {
        if (!empty($tid) && !in_array($tid, $existing_tids)) {
          $user->field_user_committee['und'][]['tid'] = $tid;
        }
      }
    }

    //user follows committees
    if ($follows) {
      $existing_tids = os2dagsorden_access_helper_get_user_follow_committees($uid);
      foreach ($follows as $tid) {
        if (!empty($tid) && !in_array($tid, $existing_tids)) {
          $user->field_follows_committee['und'][]['tid'] = $tid;
        }
      }
    }

    //user follows plus committees
    if ($follows_plus) {
      $existing_tids = os2dagsorden_access_helper_get_user_follow_committees($uid);
      foreach ($follows_plus as $tid) {
        if (!empty($tid) && !in_array($tid, $existing_tids)) {
          $user->field_follows_committee_plus['und'][]['tid'] = $tid;
        }
      }
    }

    //user follows ++ committees
    if ($follows_plus_plus) {
      $existing_tids = os2dagsorden_access_helper_get_user_follow_committees($uid);
      foreach ($follows_plus_plus as $tid) {
        if (!empty($tid) && !in_array($tid, $existing_tids)) {
          $user->field_follows_committee_pp['und'][]['tid'] = $tid;
        }
      }
    }

    user_save($user);
  }

  drupal_set_message(t('Dine ændringer er blevet gemt til @count bruger', array('@count' => count($uids))));
}
