<?php
/**
 * @file
 * Code for the OS2Web AD Integration feature.
 */

include_once('os2dagsorden_ad_integration.features.inc');

/**
 * Implements hook_menu.
 */
function os2dagsorden_ad_integration_menu() {
 $items = array();
 $items['admin/config/people/ldap/users_sync'] = array(
   'title' => 'User sync settings',
   'access arguments' => array('administer os2web'),
   'page callback' => 'drupal_get_form',
   'page arguments' => array('os2dagsorden_ad_integration_user_sync_settings_form'),
   'type' => MENU_LOCAL_TASK,
   'position' => 'right',
   'weight' => 150,
 );

 $items['os2dagsorden/run_user_sync'] = array(
	'page callback' => 'os2dagsorden_ad_integration_do_user_sync',
	'access arguments' => array('administer os2web'),
	'type' => MENU_CALLBACK,
    );
 return $items;
}

function os2dagsorden_ad_integration_user_sync_settings_form($form, $form_state) {
  $form['os2dagsorden_ad_integration_user_sync_query_fieldset'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#title' => t('LDAP Query'),
  );
   $form['os2dagsorden_ad_integration_user_sync_query_fieldset']['os2dagsorden_ad_integration_user_sync_dn_str'] = array(
    '#type' => 'textarea',
    '#title' => 'Base DNs to search in query.',
    '#description' => 'Each Base DN will be queried and results merged. e.g. ou=campus accounts,dc=ad,dc=uiuc,dc=eduEnter one per line in case if you need more than one.',
    '#default_value' => variable_get('os2dagsorden_ad_integration_user_sync_dn_str'),
    '#required' => TRUE,
  );
   $form['os2dagsorden_ad_integration_user_sync_query_fieldset']['os2dagsorden_ad_integration_user_sync_filter'] = array(
    '#type' => 'textarea',
    '#title' => 'Filter',
    '#description' => 'LDAP query filter such as (objectClass=group) or (&(objectClass=user)(homePhone=*))',
    '#default_value' => variable_get('os2dagsorden_ad_integration_user_sync_filter'),
    '#required' => TRUE,
  );
    $form['os2dagsorden_ad_integration_user_sync_query_fieldset']['os2dagsorden_ad_integration_user_sync_attr'] = array(
    '#type' => 'textarea',
    '#title' => 'Attributes to return.',
    '#description' => 'Enter as comma separated list. DN is automatically returned. Leave empty to return all attributes. e.g. objectclass,name,cn,samaccountname',
    '#default_value' => variable_get('os2dagsorden_ad_integration_user_sync_attr'),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_cronapi().
 */
function os2dagsorden_ad_integration_cronapi($op, $job = NULL) {
  switch ($op) {
    case 'list':
      return array('os2dagsorden_ad_integration_cron' => t("Sync LDAP users"));
  }
}
/**
 * Implementation of hook_cron().
 * Fires all imports.
 *
 * @return none
 */
function os2dagsorden_ad_integration_cron() {
 os2dagsorden_ad_integration_do_user_sync();
}

function os2dagsorden_ad_integration_do_user_sync() {
    if (variable_get('os2dagsorden_ad_integration_user_sync_attr', '') == '' || variable_get('os2dagsorden_ad_integration_user_sync_filter', '') == '' || variable_get('os2dagsorden_ad_integration_user_sync_dn_str', '') == '') {
        watchdog('LDAP_user_sync', 'LDAP user sync query options missing. ', WATCHDOG_ERROR);

        return;
    }
    if ($ldap_servers = ldap_servers_get_servers(NULL, 'enabled')) {
        // Get first server.
        $ldap_server = current($ldap_servers);
        // Run a search.

        $filters = variable_get('os2dagsorden_ad_integration_user_sync_filter', '');
        $attr = explode(',', variable_get('os2dagsorden_ad_integration_user_sync_attr', ''));
        $dn_str_values = preg_split('/\r\n|[\r\n]/', variable_get('os2dagsorden_ad_integration_user_sync_dn_str', ''));
        foreach ($dn_str_values as $dn_str) {
            $results = $ldap_server->search($dn_str, $filters, $attr);
            for ($i = 0; $i < $results["count"]; $i++) {
                $name = $results[$i]['mailnickname'][0];
                $mail = $results[$i]['mail'][0];

                if (!empty($results[$i]['displayname'][0]))
                    $full_name = $results[$i]['displayname'][0];
                else
                    $full_name = $results[$i]['name'][0];
                $company = $results[$i]['physicaldeliveryofficename'][0];

                if (!empty($mail) && !empty($name) && $name != "admin") {
                    if ($u = user_load_by_name($name)) {
                        $user = $u;
                    } else if ($m = user_load_by_mail($mail)) {
                        $user = $m;
                    } else {
                        $user = new stdClass();
                        $user->name = $name;
                        $user->mail = $mail;
                        $user->status = 1;
                        $user->field_user_can_send_closed_bp['und'][0]['value'] = 0;
                        $user->roles = array(DRUPAL_AUTHENTICATED_RID => 'godkendt bruger', 3 => 'os2dagsorden');
                    }
                    $user->field_user_organization['und'][0]['value'] = $company;
                    $user->field_user_full_name['und'][0]['value'] = $full_name;

                    user_save($user);
                    watchdog('LDAP_user_sync', 'User %user imported', array('%user' => $name), WATCHDOG_INFO);
                }
            }
        }
    } else {
        watchdog('LDAP_user_sync', 'LDAP connection error. ', WATCHDOG_ERROR);
    }
}
