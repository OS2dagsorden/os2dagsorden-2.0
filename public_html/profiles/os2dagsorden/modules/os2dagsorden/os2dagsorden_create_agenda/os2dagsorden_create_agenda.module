<?php

/**
 * os2dagsorden_create_agenda
 *
 * PHP version 5
 *
 * @category OS2Dagsorden
 * @package  Os2dagsorden_Create_Agenda
 * @author   Stanislav Kutasevits <stan@bellcom.dk>
 * @license  http://www.gnu.org/licenses/gpl-2.0.html GNU General Public License, version 2
 * @link     http://bellcom.dk
 */

require drupal_get_path('module', 'os2dagsorden_create_agenda') . '/includes/os2dagsorden_create_agenda_meeting.inc';
require drupal_get_path('module', 'os2dagsorden_create_agenda') . '/includes/os2dagsorden_create_agenga_meeting_simple.inc';
require drupal_get_path('module', 'os2dagsorden_create_agenda') . '/includes/os2dagsorden_create_agenda_meeting_form.inc';
require drupal_get_path('module', 'os2dagsorden_create_agenda') . '/includes/os2dagsorden_create_agenda_bullet_point.inc';
require drupal_get_path('module', 'os2dagsorden_create_agenda') . '/includes/os2dagsorden_create_agenda_bpa.inc';
 
/**
 * Implementation of hook_menu
 *
 * @return list of links
 */
function os2dagsorden_create_agenda_menu() {
  $items = array();
  $items['agenda/meeting'] = array(
      'page callback' => 'os2dagsorden_create_agenda_meeting_page',
      'access arguments' => array('administer os2web'),
      'type' => MENU_CALLBACK,
  );
  
  $items['agenda/meeting/%'] = array(
      'page callback' => 'os2dagsorden_create_agenda_meeting_page',
      'access callback' => '_os2dagsorden_create_agenda_meeting_access',
      'access arguments' => array(2),
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
  );
  
  $items['node/%/agenda'] = array(
    'page callback' => '_os2dagsorden_create_agenda_redirect',
    'access callback' => '_os2dagsorden_create_agenda_meeting_access',
    'access arguments' => array(1),
    'page arguments' => array(1),
    'title' => 'Edit agenda',
    'type' => MENU_LOCAL_TASK,
  );
  
  $items['node/%/agenda_simple'] = array(
    'page callback' => '_os2dagsorden_create_agenda_simple_redirect',
    'access callback' => '_os2dagsorden_create_agenda_meeting_access',
    'access arguments' => array(1),
    'page arguments' => array(1),
    'title' => 'Edit agenda simple',
    'type' => MENU_LOCAL_TASK,
  );
  
  $items['admin/config/os2dagsorden/create_agenda'] = array(
    'title' => 'OS2dagsorden Manually create full agenda',
    'description' => 'Module that supports manual agenda creation',
    'page callback' => '_os2dagsorden_create_agenda_redirect',
    'access arguments' => array('administer os2web'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  $items['admin/config/os2dagsorden/create_agenda_simple'] = array(
    'title' => 'OS2dagsorden Manually create simple agenda',
    'description' => 'Module that supports manual agenda creation',
    'page callback' => '_os2dagsorden_create_agenda_simple_redirect',
    'access arguments' => array('administer os2web'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  return $items;
}

/**
 * Helper function, allows the menu hooks to be redirected to the correct links.
 *
 * @param int $meeing_id id of the meeting_id
 *
 * @return none
 */
function _os2dagsorden_create_agenda_redirect($meeting_id = null){
  if (!$meeting_id)
    drupal_goto('agenda/meeting');
  else 
    drupal_goto('agenda/meeting/' . $meeting_id);
}

/**
 * Helper function, allows the menu hooks to be redirected to the correct links.
 *
 * @param int $meeing_id id of the meeting_id
 *
 * @return none
 */
function _os2dagsorden_create_agenda_simple_redirect($meeting_id = null){
  if (!$meeting_id)
    drupal_goto('agenda/meeting', array('query' => array('simple' => '1')));
  else 
    drupal_goto('agenda/meeting/' . $meeting_id, array('query' => array('simple' => '1')));
}

/**
 * Access callback. Returns the create meeeting form
 *
 * @param int $meeing_id id of the meeting
 *
 * @return form
 */
function os2dagsorden_create_agenda_meeting_page($meeting_id = null) {
  if ($_GET['simple'])
    return drupal_get_form('os2dagsorden_create_agenda_meeting_simple', $meeting_id);
  else
    return drupal_get_form('os2dagsorden_create_agenda_meeting', $meeting_id);
}

/**
 * Access callback. Show tab only on meeting pages, and if user has access.
 *
 * @param int $meeing_id id of the meeting
 *
 * @return true of false
 */
function _os2dagsorden_create_agenda_meeting_access($meeting_id){
  $node = node_load($meeting_id);
  if ($node->type != 'os2web_meetings_meeting') {
    return FALSE;
  }
  return user_access('administer os2web');
}