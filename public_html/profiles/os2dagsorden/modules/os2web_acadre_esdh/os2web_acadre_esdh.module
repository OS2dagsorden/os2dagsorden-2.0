<?php

/**
 * @file
 * This module implements Acadre ESDH backend for use in os2web
 */

define('OS2WEB_ACADRE_ESDH_ACADRE_MM_IMPORT_DIR', 'public://acadre');
define('OS2WEB_ACADRE_ESDH_ACADRE_MM_DEFAULT_APPROVED', '62,59,64,53,54,56,57,63,58,51,55,61,68,69,42');

/**
 * Implements hook_ctools_plugin_directory().
 *
 * Register as provider of esdh plugins
 */
function os2web_acadre_esdh_ctools_plugin_directory($module, $plugin) {
  $enabled_plugins = variable_get('os2web_acadre_esdh_enabled_plugins', drupal_map_assoc(array_keys(os2web_esdh_provider_ctools_plugin_type())));
  if ($module == 'os2web_esdh_provider' && $enabled_plugins[$plugin]) {
    return "plugins/$plugin";
  }
}

/**
 * Implements hook_form_alter().
 *
 * Add configuration to the settings form.
 */
function os2web_acadre_esdh_form_os2web_settings_settings_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == "os2web_settings_settings_form") {
   array_unshift($form['#submit'], 'os2web_acadre_esdh_form_os2web_settings_settings_form_submit');
  }
  // MM configuration.
  $form['os2web_mm'] = array(
    '#type' => 'fieldset',
    '#title' => t('Meeting import'),
    '#description' => t('Settings regarding import of Acadre minutes and meetings.'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['os2web_mm']['os2web_meetings_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to Acadre publish folder.'),
    '#description' => t('This is the path where Acadre publish .XML files to.'),
    '#default_value' => variable_get('os2web_meetings_path', OS2WEB_ACADRE_ESDH_ACADRE_MM_IMPORT_DIR),
  );
  $form['os2web_mm']['os2web_meetings_acadre_images'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to Acadre images publish folder'),
    '#description' => t('This is the path where Acadre acadre images are located'),
   '#default_value' => variable_get('os2web_meetings_acadre_images'),
  );
   $form['os2web_mm']['os2web_meetings_acadre_images_destination_folder'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to Acadre images destination folder'),
    '#description' => t('This is the path where Acadre acadre images are copied'),
   '#default_value' => variable_get('os2web_meetings_acadre_images_destination_folder'),
  );
  
  $form['os2web_mm']['os2dagsorden_committees_positive_list_as_import_list'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use list of active committees during import'),
    '#default_value' => variable_get('os2dagsorden_committees_positive_list_as_import_list', false),
    '#description' => t('If checkbox is clicked, the list of positive committees (defined in <a href="@link">here</a>) will be used', array('@link' => '/admin/structure/taxonomy/os2web_meetings_tax_committee')),
  );

  $form['os2web_mm']['os2web_meetings_approved_committee'] = array(
    '#type' => 'textfield',
    '#title' => t('Approved committees'),
    '#maxlength' => 200,
    '#disabled' => variable_get('os2dagsorden_committees_positive_list_as_import_list', false),
    '#description' => t('Comma separated list of committees ID approved for publishing.'),
    '#default_value' => variable_get('os2web_meetings_approved_committee', OS2WEB_ACADRE_ESDH_ACADRE_MM_DEFAULT_APPROVED),
  );

  $form['os2web_mm']['os2web_acadre_add_committee_to_title'] = array(
    '#type' => 'checkbox',
    '#default_value' => variable_get('os2web_acadre_add_committee_to_title', false),
    '#title' => t('Add committee name to meeting title'), 
    '#description' =>'This decides whether a committee name will be added to meeting title'
  );
  $form['os2web_mm']['os2web_meetings_import_closed_agenda'] = array(
    '#type' => 'checkbox',
    '#title' => t('Import closed agenda'),
    '#description' => t('This decides if closed agenda is or is not to be imported'),
    '#default_value' => variable_get('os2web_meetings_import_closed_agenda', FALSE),
  );

  $form['os2web_mm']['os2web_acadre_location_field'] = array(
    '#type' => 'radios',
    '#title' => t('Get the address for the meeting from'),
    '#default_value' => variable_get('s2web_acadre_location_field', 'true'),
    '#options' => $options2 = array('true' => t('the location field'), 'false' => t('the address field')),
    '#description' => t('This decides from which field meeting address gets'),
  );
  $form['os2web_mm']['os2web_acadre_description_field'] = array(
    '#type' => 'radios',
    '#title' => t('Get the comments for the meeting from'),
    '#default_value' => variable_get('os2web_acadre_description_field', 'true'),
    '#options' => $options2 = array('true' => t('the name field'), 'false' => t('the description field')),
    '#description' => t('This decides from which field meeting comments gets'),
  );
  
  $form['os2web_mm']['os2web_acadre_add_committee_to_title'] = array(
    '#type' => 'checkbox',
    '#default_value' => variable_get('os2web_acadre_add_committee_to_title', FALSE),
    '#title' => t('Add committee name to meeting title'),
    '#description' => 'This decides whether a committee name will be added to meeting title',
  );

  $form['os2web_acadre_plugins'] = array(
    '#type' => 'fieldset',
    '#title' => t('Acadre plugins configuration'),
  );
  $form['os2web_acadre_plugins']["os2web_acadre_esdh_enabled_plugins"] = array(
    '#type' => 'checkboxes',
    '#title' => t('Enabled plugins'),
    '#description' => t('This decides which acadre plugins should be enabled'),
    '#options' => drupal_map_assoc(array_keys(os2web_esdh_provider_ctools_plugin_type())),
    '#default_value' => variable_get('os2web_acadre_esdh_enabled_plugins', drupal_map_assoc(array_keys(os2web_esdh_provider_ctools_plugin_type()))),
  );
  // CM Configuration.
  $form['os2web_pws_config_group'] = array(
    '#type' => 'fieldset',
    '#title' => t('PWS Endpoint configuration'),
  );
  $form['os2web_pws_config_group']['os2web_pws_url'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_pws_url'),
    '#title' => t('PWS URL for V4'),
    '#description' => t('URL to the PWS webservice endpoint.'),
  );
  $form['os2web_pws_config_group']['os2web_pws_url_v6'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_pws_url_v6'),
    '#title' => t('PWS URL for  V6'),
    '#description' => t('URL to the PWSv6 webservice endpoint.'),
  );
  $form['os2web_pws_config_group']['os2web_pws_url_search'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_pws_url_search'),
    '#title' => t('PWS URL for Search service'),
    '#description' => t('URL to the webservice endpoint that runs the search service.'),
  );
  $form['os2web_pws_config_group']['os2web_pws_user'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_pws_user'),
    '#title' => t('PWS login user'),
    '#description' => t('PWS HTTP authentification user.'),
  );
  $form['os2web_pws_config_group']['os2web_pws_password'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_pws_password'),
    '#title' => t('PWS password'),
    '#description' => t('PWS HTTP authentification password.'),
  );

  // Proxy setups.
  $form['os2web_pws_proxy_group'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => !variable_get('os2web_pws_proxy'),
    '#title' => t('Proxy configuration'),
    '#weight' => 10,
  );
  $form['os2web_pws_proxy_group']['os2web_pws_proxy'] = array(
    '#type' => 'checkbox',
    '#default_value' => variable_get('os2web_pws_proxy'),
    '#title' => t('Use proxy?'),
  );
  $form['os2web_pws_proxy_group']['os2web_pws_proxy_host'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_pws_proxy_host'),
    '#title' => t('Proxy hostname or IP'),
  );
  $form['os2web_pws_proxy_group']['os2web_pws_proxy_port'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_pws_proxy_port'),
    '#title' => t('Proxy port number.'),
  );
  $form['os2web_pws_adlib_group'] = array(
    '#type' => 'fieldset',
    '#title' => t('Adlib Endpoint configuration'),
  );
  $form['os2web_pws_adlib_group']['os2web_adlib_url'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('os2web_adlib_url', 'http://706CAR01/ExponentWSA/ExponentWSA.asmx?wsdl'),
    '#title' => t('URL for Adlib service endpoint'),
    '#description' => t('URL to the webservice endpoint that runs the Adlib service.'),
  );
}
/**
 * Implements hook_form_submit().
 */
function os2web_acadre_esdh_form_os2web_settings_settings_form_submit(&$form, &$form_state) {      
  if (substr(trim($form_state['values']['os2web_meetings_path']), -1) !='/')
     $form_state['values']['os2web_meetings_path']=$form_state['values']['os2web_meetings_path'].'/';
  
  if (substr(trim($form_state['values']['os2web_meetings_acadre_images']), -1) !='/')
     $form_state['values']['os2web_meetings_acadre_images']=$form_state['values']['os2web_meetings_acadre_images'].'/';
       
  if (substr(trim($form_state['values']['os2web_meetings_acadre_images_destination_folder']), -1) !='/')
     $form_state['values']['os2web_meetings_acadre_images_destination_folder']=$form_state['values']['os2web_meetings_acadre_images_destination_folder'].'/';
     
}
/**
 * Implements hook_os2web_help().
 */
function os2web_acadre_esdh_os2web_help($sections) {

  // Content types.
  $sections['configuration'] = t('<p>Configure PWS and resume import in the <a href="@url" target="_blank">OS2web Configuration</a><br /><i>This requires some insight in the server setup and the data recieved.</i><br />Setup the required endpoints, path to the published XML files from acadre and the authentication user/pass for accessing the PWS endpoints.</p>', array('@url' => url('admin/config/os2web/settings')));
  $sections['configuration'] .= t('<p><a href="@url" target="_blank">See the advanced documentation for acadre</a></p>', array('@url' => url('admin/help/os2web_acadre_esdh')));
  return $sections;
}
